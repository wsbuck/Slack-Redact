{"version":3,"sources":["redux/actions/index.js","redux/reducers/index.js","redux/store/index.js","hooks/useKeyPress.js","components/NavigationButtons.js","components/EditCard.js","components/FileUpload.js","components/FileDownload.js","components/App.js","serviceWorker.js","index.js"],"names":["RECEIVE_JSON","REQUEST_JSON","INCREMENT_INDEX","DECREMENT_INDEX","UPDATE_FIELD","UPDATE_FILENAME","incrementIndex","type","decrementIndex","rootReducer","combineReducers","editJSON","state","isLoading","name","data","a","b","c","index","action","Object","assign","payload","map","item","field","value","loggerMiddleware","createLogger","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","window","addEventListener","removeEventListener","NavigationButtons","dispatch","useDispatch","dataLength","useSelector","length","dataIndex","canNext","setCanNext","canPrev","setCanPrev","leftPress","rightPress","ButtonGroup","Button","disabled","onClick","useStyles","makeStyles","theme","card","maxWidth","width","marginLeft","marginRight","marginTop","container","display","flexWrap","textField","margin","spacing","subTextField","EditCard","classes","fileName","handleChange","updateField","console","log","Card","className","CardContent","Typography","title","color","gutterBottom","noValidate","autoComplete","keys","TextField","label","onChange","e","target","multiline","variant","match","hidden","FileUpload","reader","FileReader","handleFileUpload","onload","onReaderLoad","newName","files","readAsText","newObj","JSON","parse","result","flatten","id","document","querySelector","click","FileDownload","dataObj","filename","dataStr","setDataStr","tempObj","unflatten","encodeURIComponent","stringify","href","download","fileButtons","justifyContent","App","dataItem","setDataItem","Boolean","location","hostname","preloadedState","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e98b8d8.chunk.js","sourcesContent":["export const RECEIVE_JSON = 'RECEIVE_JSON';\nexport const REQUEST_JSON = 'REQUEST_JSON';\nexport const INCREMENT_INDEX = 'INCREMENT_INDEX';\nexport const DECREMENT_INDEX = 'DECREMENT_INDEX';\nexport const UPDATE_FIELD = 'UPDATE_FIELD';\nexport const UPDATE_FILENAME = 'UPDATE_FILENAME';\n\nexport function receiveJSON(json) {\n  return {\n    type: RECEIVE_JSON,\n    payload: json,\n  };\n}\n\nexport function updateFileName(name) {\n  return {\n    type: UPDATE_FILENAME,\n    payload: name,\n  };\n}\n\nexport function requestJSON(json) {\n  return {\n    type: REQUEST_JSON,\n  };\n}\n\nexport function incrementIndex() {\n  return {\n    type: INCREMENT_INDEX,\n  };\n}\n\nexport function decrementIndex() {\n  return {\n    type: DECREMENT_INDEX,\n  };\n}\n\nexport function updateField(field, value) {\n  return {\n    type: UPDATE_FIELD,\n    field: field,\n    value: value,\n  };\n}\n","import { combineReducers } from 'redux';\n\nimport {\n  RECEIVE_JSON,\n  REQUEST_JSON,\n  INCREMENT_INDEX,\n  DECREMENT_INDEX,\n  UPDATE_FIELD,\n  UPDATE_FILENAME,\n} from '../actions';\n\nconst editJSON = (\n  state={\n    isLoading: false,\n    name: 'temp.json',\n    data: [\n      {\n        a: 'Hello',\n        b: 'World',\n        c: '!!!!',\n      },\n      {\n        a: 'foo',\n        b: 'bar',\n        c: 'foobar',\n      },\n    ],\n    index: 0,\n  },\n  action\n) => {\n  switch (action.type) {\n    case REQUEST_JSON:\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    case RECEIVE_JSON:\n      return Object.assign({}, state, {\n        data: action.payload,\n        isLoading: false,\n        index: 0,\n      });\n    case INCREMENT_INDEX:\n      return Object.assign({}, state, {\n        index: state.index + 1,\n      });\n    case DECREMENT_INDEX:\n      return Object.assign({}, state, {\n        index: state.index - 1,\n      });\n    case UPDATE_FILENAME:\n      return Object.assign({}, state, {\n        name: action.payload,\n      });\n    case UPDATE_FIELD:\n      return Object.assign({}, state, {\n        data: state.data.map((item, index) => {\n          if (index === state.index) {\n            item[action.field] = action.value\n          }\n          return item;\n        })\n      });\n    default:\n      return state;\n  }\n}\n\n\nconst rootReducer = combineReducers({\n  editJSON,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nimport rootReducer from '../reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\n  );\n}\n","import { useState, useEffect } from 'react';\n\nconst useKeyPress = (targetKey) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  function upHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  });\n\n  return keyPressed;\n}\n\nexport default useKeyPress;\n","import React, { useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport { incrementIndex, decrementIndex } from '../redux/actions';\n\nimport useKeyPress from '../hooks/useKeyPress';\n\n\nconst NavigationButtons = () => {\n  const dispatch = useDispatch();\n  const dataLength = useSelector(state => state.editJSON.data.length);\n  const dataIndex = useSelector(state => state.editJSON.index);\n  const [canNext, setCanNext] = useState(false);\n  const [canPrev, setCanPrev] = useState(false);\n  const leftPress = useKeyPress('ArrowLeft');\n  const rightPress = useKeyPress('ArrowRight');\n\n\n  useEffect(() => {\n    setCanNext(dataIndex + 1 <= dataLength - 1);\n    setCanPrev(dataIndex - 1 >= 0);\n  }, [dataIndex, dataLength]);\n\n  useEffect(() => {\n    if (canNext && rightPress) {\n      handleNext();\n    } else if (canPrev && leftPress) {\n      handlePrev();\n    }\n  }, [leftPress, rightPress]);\n\n  function handlePrev() {\n    if (canPrev) {\n      dispatch(decrementIndex());\n    }\n  }\n\n  function handleNext() {\n    if (canNext) {\n      dispatch(incrementIndex());\n    }\n  }\n\n  return (\n    <ButtonGroup>\n      <Button \n        disabled={dataIndex <= 0}\n        onClick={() => dispatch(decrementIndex())}\n      >\n        <ArrowBackIcon />\n      </Button>\n      <Button\n        disabled={dataIndex >= dataLength - 1}\n        onClick={() => dispatch(incrementIndex())}\n      >\n        <ArrowForwardIcon />\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default NavigationButtons;\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { updateField } from '../redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: '100%',\n    width: 600,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 20,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: '100%',\n  },\n  subTextField: {\n    margin: theme.spacing(1),\n    marginLeft: 'auto',\n    width: '90%',\n  },\n}));\n\nconst EditCard = ({ data }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const fileName = useSelector(state => state.editJSON.name);\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  function handleChange(key, value) {\n    dispatch(updateField(key, value));\n  }\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {fileName}\n        </Typography>\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          {\n            Object.keys(data).map((key, index) => (\n              <TextField\n                key={index}\n                label={key}\n                value={data[key]}\n                onChange={(e) => handleChange(key, e.target.value)}\n                // disabled\n                multiline\n                variant=\"outlined\"\n                className={\n                  key.match(/\\./)\n                  ? classes.subTextField\n                  : classes.textField\n                }\n              />\n            ))\n          }\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default EditCard;","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\n\nimport { receiveJSON, updateFileName } from '../redux/actions';\n\nimport flatten from 'flat';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n  hidden: {\n    display: 'none',\n  },\n}));\n\nconst FileUpload = () => {\n  const reader = new FileReader();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  function handleFileUpload(e) {\n    reader.onload = onReaderLoad;\n    const oldName = e.target.files[0].name;\n    const newName = oldName.match(/^.*(?=(\\.json))/)[0] + '_REDACTED.json';\n    dispatch(updateFileName(newName));\n    reader.readAsText(e.target.files[0]);\n  }\n\n  function onReaderLoad(e) {\n    const obj = JSON.parse(e.target.result);\n    const newObj = obj.map(item => {\n      return flatten(item);\n    });\n    dispatch(receiveJSON(newObj));\n  }\n\n  function handleClick() {\n    document.querySelector('#input').click();\n  }\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        onChange={(e) => handleFileUpload(e)}\n        id='input'\n        className={classes.hidden}\n      />\n      <Button\n        onClick={() => handleClick()}\n        variant=\"outlined\"\n      >\n        Upload\n      </Button>\n    </div>\n  );\n}\n\nexport default FileUpload;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport flatten from 'flat';\n\nimport Button from '@material-ui/core/Button';\n\nconst FileDownload = () => {\n  const dataObj = useSelector(state => state.editJSON.data);\n  const filename = useSelector(state => state.editJSON.name);\n  const [dataStr, setDataStr] = useState('');\n\n  // const dataStr = (\n  //   \"data:text/json;charset=utf-8,\" + \n  //   encodeURIComponent(JSON.stringify(dataObj))\n  // );\n\n  useEffect(() => {\n    const tempObj = dataObj.map((item) => {\n      return flatten.unflatten(item);\n    });\n    setDataStr(\n      'data:text/json;charset=utf-8,' + \n      encodeURIComponent(JSON.stringify(tempObj))\n    );\n\n  }, [dataObj]);\n\n  return (\n    <Button variant=\"outlined\" href={dataStr} download={filename}>\n      Download\n    </Button>\n  );\n}\n\nexport default FileDownload;","import React, { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport NavigationButtons from './NavigationButtons';\nimport EditCard from './EditCard';\nimport FileUpload from './FileUpload';\nimport FileDownload from './FileDownload';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../assets/App.css';\n\n\nconst useStyles = makeStyles(theme => ({\n  fileButtons: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const data = useSelector(state => state.editJSON.data);\n  const dataIndex = useSelector(state => state.editJSON.index);\n  const [dataItem, setDataItem] = useState();\n\n  useEffect(() => {\n    setDataItem(data[dataIndex]);\n  }, [dataIndex, data]);\n\n  return (\n    <div className=\"App\">\n      <NavigationButtons />\n      {dataItem && (<EditCard data={dataItem} />)}\n      { data && (\n        <p>Index: {dataIndex}</p>\n      )}\n      <div className={classes.fileButtons}>\n        <FileUpload />\n        <FileDownload />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './redux/store';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}