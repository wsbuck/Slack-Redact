{"version":3,"sources":["redux/actions/index.js","redux/reducers/index.js","redux/store/index.js","hooks/useKeyPress.js","components/NavigationButtons.js","components/EditCard.js","components/FileUpload.js","components/FileDownload.js","components/App.js","serviceWorker.js","index.js"],"names":["RECEIVE_JSON","REQUEST_JSON","INCREMENT_INDEX","DECREMENT_INDEX","UPDATE_FIELD","UPDATE_FILENAME","incrementIndex","type","decrementIndex","updateField","field","value","rootReducer","combineReducers","editJSON","state","isLoading","name","data","a","b","c","index","action","Object","assign","payload","map","item","middlewares","thunkMiddleware","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","window","addEventListener","removeEventListener","NavigationButtons","dispatch","useDispatch","dataLength","useSelector","length","dataIndex","canNext","setCanNext","canPrev","setCanPrev","leftPress","rightPress","ButtonGroup","Button","disabled","onClick","useStyles","makeStyles","theme","card","maxWidth","width","marginLeft","marginRight","marginTop","container","display","flexWrap","textField","margin","spacing","subTextField","iconButton","padding","divider","height","inputRoot","alignItems","EditCard","classes","fileName","setDisabled","tempDisabled","keys","forEach","Card","className","CardContent","Typography","title","color","gutterBottom","noValidate","autoComplete","TextField","label","onChange","e","handleChange","target","multiline","inputProps","variant","IconButton","aria-label","handleRedact","Divider","orientation","temp","handleEdit","hidden","FileUpload","reader","FileReader","handleFileUpload","onload","onReaderLoad","newName","files","match","readAsText","newObj","JSON","parse","result","flatten","id","document","querySelector","click","FileDownload","dataObj","filename","dataStr","setDataStr","tempObj","unflatten","encodeURIComponent","stringify","href","download","fileButtons","justifyContent","App","dataItem","setDataItem","Boolean","location","hostname","preloadedState","store","createStore","applyMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8PAAaA,EAAe,eACfC,EAAe,eACfC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAe,eACfC,EAAkB,kBAsBxB,SAASC,IACd,MAAO,CACLC,KAAML,GAIH,SAASM,IACd,MAAO,CACLD,KAAMJ,GAIH,SAASM,EAAYC,EAAOC,GACjC,MAAO,CACLJ,KAAMH,EACNM,MAAOA,EACPC,MAAOA,GChCX,IA8DeC,EAJKC,YAAgB,CAClCC,SA3De,WAmBX,IAlBJC,EAkBG,uDAlBG,CACJC,WAAW,EACXC,KAAM,YACNC,KAAM,CACJ,CACEC,EAAG,QACHC,EAAG,QACHC,EAAG,QAEL,CACEF,EAAG,MACHC,EAAG,MACHC,EAAG,WAGPC,MAAO,GAETC,EACG,uCACH,OAAQA,EAAOhB,MACb,KAAKN,EACH,OAAOuB,OAAOC,OAAO,GAAIV,EAAO,CAC9BC,WAAW,IAEf,KAAKhB,EACH,OAAOwB,OAAOC,OAAO,GAAIV,EAAO,CAC9BG,KAAMK,EAAOG,QACbV,WAAW,EACXM,MAAO,IAEX,KAAKpB,EACH,OAAOsB,OAAOC,OAAO,GAAIV,EAAO,CAC9BO,MAAOP,EAAMO,MAAQ,IAEzB,KAAKnB,EACH,OAAOqB,OAAOC,OAAO,GAAIV,EAAO,CAC9BO,MAAOP,EAAMO,MAAQ,IAEzB,KAAKjB,EACH,OAAOmB,OAAOC,OAAO,GAAIV,EAAO,CAC9BE,KAAMM,EAAOG,UAEjB,KAAKtB,EACH,OAAOoB,OAAOC,OAAO,GAAIV,EAAO,CAC9BG,KAAMH,EAAMG,KAAKS,KAAI,SAACC,EAAMN,GAI1B,OAHIA,IAAUP,EAAMO,QAClBM,EAAKL,EAAOb,OAASa,EAAOZ,OAEvBiB,OAGb,QACE,OAAOb,MC3DPc,EAAc,CAACC,K,qECyBNC,EA5BK,SAACC,GAAe,IAAD,EACGC,oBAAS,GADZ,mBAC1BC,EAD0B,KACdC,EADc,KAGjC,SAASC,EAAT,GAA8B,EAAPC,MACTL,GACVG,GAAc,GAIlB,SAASG,EAAT,GAA4B,EAAPD,MACPL,GACVG,GAAc,GAclB,OAVAI,qBAAU,WAIR,OAHAC,OAAOC,iBAAiB,UAAWL,GACnCI,OAAOC,iBAAiB,QAASH,GAE1B,WACLE,OAAOE,oBAAoB,UAAWN,GACtCI,OAAOE,oBAAoB,QAASJ,OAIjCJ,GCyCMS,EAtDW,WACxB,IAAMC,EAAWC,cACXC,EAAaC,aAAY,SAAAhC,GAAK,OAAIA,EAAMD,SAASI,KAAK8B,UACtDC,EAAYF,aAAY,SAAAhC,GAAK,OAAIA,EAAMD,SAASQ,SAHxB,EAIAW,oBAAS,GAJT,mBAIvBiB,EAJuB,KAIdC,EAJc,OAKAlB,oBAAS,GALT,mBAKvBmB,EALuB,KAKdC,EALc,KAMxBC,EAAYvB,EAAY,aACxBwB,EAAaxB,EAAY,cA6B/B,OA1BAQ,qBAAU,WACRY,EAAWF,EAAY,GAAKH,EAAa,GACzCO,EAAWJ,EAAY,GAAK,KAC3B,CAACA,EAAWH,IAEfP,qBAAU,WACJW,GAAWK,EAeXL,GACFN,EAAStC,KAdA8C,GAAWE,GAOlBF,GACFR,EAASpC,OAJV,CAAC8C,EAAWC,EAAYL,EAASE,IAelC,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,SAAUT,GAAa,EACvBU,QAAS,kBAAMf,EAASpC,OAExB,kBAAC,IAAD,OAEF,kBAACiD,EAAA,EAAD,CACEC,SAAUT,GAAaH,EAAa,EACpCa,QAAS,kBAAMf,EAAStC,OAExB,kBAAC,IAAD,S,yGC7CFsD,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,OACVC,MAAO,IACPC,WAAY,OACZC,YAAa,OACbC,UAAW,IAEbC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,UAAW,CACTC,OAAQX,EAAMY,QAAQ,GACtBT,MAAO,QAETU,aAAc,CACZF,OAAQX,EAAMY,QAAQ,GACtBR,WAAY,OACZD,MAAO,OAETW,WAAY,CACVC,QAAS,GAEXC,QAAS,CACPC,OAAQ,GACRN,OAAQ,GAEVO,UAAW,CACTH,QAAS,UACTP,QAAS,OACTW,WAAY,SAEZhB,MAAO,YAkFIiB,EA9EE,SAAC,GAAc,IAAZhE,EAAW,EAAXA,KACZiE,EAAUvB,IACVhB,EAAWC,cACXuC,EAAWrC,aAAY,SAAAhC,GAAK,OAAIA,EAAMD,SAASG,QAHxB,EAIGgB,mBAAS,IAJZ,mBAItByB,EAJsB,KAIZ2B,EAJY,KA8B7B,OARA9C,qBAAU,WACR,IAAM+C,EAAe,GACrB9D,OAAO+D,KAAKrE,GAAMsE,SAAQ,SAACnD,GACzBiD,EAAajD,IAAO,KAEtBgD,EAAYC,KACX,CAACpE,IAGF,kBAACuE,EAAA,EAAD,CAAMC,UAAWP,EAAQpB,MACvB,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYF,UAAWP,EAAQU,MAAOC,MAAM,gBAAgBC,cAAY,GACrEX,GAEH,0BAAMM,UAAWP,EAAQd,UAAW2B,YAAU,EAACC,aAAa,OAExDzE,OAAO+D,KAAKrE,GAAMS,KAAI,SAACU,EAAKf,GAAN,OACpB,yBAAKoE,UAAWP,EAAQH,UAAW3C,IAAKf,GACtC,kBAAC4E,EAAA,EAAD,CACEC,MAAO9D,EACP1B,MAAOO,EAAKmB,GACZ+D,SAAU,SAACC,GAAD,OArC1B,SAAsBhE,EAAK1B,GACzBiC,EAASnC,EAAY4B,EAAK1B,IAoCK2F,CAAajE,EAAKgE,EAAEE,OAAO5F,QAC5C6F,WAAS,EACTd,UAAWP,EAAQX,UACnBiC,WAAY,CAAE,aAAcpE,GAC5BqE,QAAQ,WACRhD,SAAUA,EAASrB,KAErB,kBAACsE,EAAA,EAAD,CACEjB,UAAWP,EAAQP,WACnBgC,aAAW,aACXjD,QAAS,kBA3CzB,SAAsBtB,GACpBO,EAASnC,EAAY4B,EAAK,UA0CGwE,CAAaxE,KAE5B,kBAAC,IAAD,OAEF,kBAACyE,EAAA,EAAD,CACEpB,UAAWP,EAAQL,QACnBiC,YAAY,aAEd,kBAACJ,EAAA,EAAD,CACEjB,UAAWP,EAAQP,WACnBgC,aAAW,aACXjD,QAAS,kBAlDzB,SAAoBtB,GAClB,IAAI2E,EAAOxF,OAAOC,OAAO,GAAIiC,EAAlBlC,OAAA,IAAAA,CAAA,GACRa,GAAOqB,EAASrB,KAEnBgD,EAAY2B,GA8CiBC,CAAW5E,KAE1B,kBAAC,IAAD,e,iBC5GZuB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCoD,OAAQ,CACN5C,QAAS,YA+CE6C,EA3CI,WACjB,IAAMC,EAAS,IAAIC,WACbzE,EAAWC,cACXsC,EAAUvB,IAEhB,SAAS0D,EAAiBjB,GACxBe,EAAOG,OAASC,EAChB,IACMC,EADUpB,EAAEE,OAAOmB,MAAM,GAAGzG,KACV0G,MAAM,mBAAmB,GAAK,iBACtD/E,ENZK,CACLrC,KAAMF,EACNqB,QMUwB+F,IACxBL,EAAOQ,WAAWvB,EAAEE,OAAOmB,MAAM,IAGnC,SAASF,EAAanB,GACpB,IACMwB,EADMC,KAAKC,MAAM1B,EAAEE,OAAOyB,QACbrG,KAAI,SAAAC,GACrB,OAAOqG,IAAQrG,MAEjBgB,EN5BK,CACLrC,KAAMP,EACN0B,QM0BqBmG,IAOvB,OACE,6BACE,2BACEtH,KAAK,OACL6F,SAAU,SAACC,GAAD,OAAOiB,EAAiBjB,IAClC6B,GAAG,QACHxC,UAAWP,EAAQ+B,SAErB,kBAACzD,EAAA,EAAD,CACEE,QAAS,WAZbwE,SAASC,cAAc,UAAUC,SAa7B3B,QAAQ,YAFV,YChBS4B,EA5BM,WACnB,IAAMC,EAAUxF,aAAY,SAAAhC,GAAK,OAAIA,EAAMD,SAASI,QAC9CsH,EAAWzF,aAAY,SAAAhC,GAAK,OAAIA,EAAMD,SAASG,QAF5B,EAGKgB,mBAAS,IAHd,mBAGlBwG,EAHkB,KAGTC,EAHS,KAqBzB,OAXAnG,qBAAU,WACR,IAAMoG,EAAUJ,EAAQ5G,KAAI,SAACC,GAC3B,OAAOqG,IAAQW,UAAUhH,MAE3B8G,EACE,gCACAG,mBAAmBf,KAAKgB,UAAUH,OAGnC,CAACJ,IAGF,kBAAC9E,EAAA,EAAD,CAAQiD,QAAQ,WAAWqC,KAAMN,EAASO,SAAUR,GAApD,aCjBE5E,G,MAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCmF,YAAa,CACX3E,QAAS,OACT4E,eAAgB,eA+BLC,MA1Bf,WACE,IAAMhE,EAAUvB,IACV1C,EAAO6B,aAAY,SAAAhC,GAAK,OAAIA,EAAMD,SAASI,QAC3C+B,EAAYF,aAAY,SAAAhC,GAAK,OAAIA,EAAMD,SAASQ,SAHzC,EAImBW,qBAJnB,mBAINmH,EAJM,KAIIC,EAJJ,KAUb,OAJA9G,qBAAU,WACR8G,EAAYnI,EAAK+B,MAChB,CAACA,EAAW/B,IAGb,yBAAKwE,UAAU,OACb,kBAAC,EAAD,MACC0D,GAAa,kBAAC,EAAD,CAAUlI,KAAMkI,IAC5BlI,GACA,qCAAW+B,GAEb,yBAAKyC,UAAWP,EAAQ8D,aACtB,kBAAC,EAAD,MACA,kBAAC,EAAD,SC3BYK,QACW,cAA7B9G,OAAO+G,SAASC,UAEe,UAA7BhH,OAAO+G,SAASC,UAEhBhH,OAAO+G,SAASC,SAAS7B,MACvB,2DCRN,IRCuC8B,EQDjCC,EREGC,YACL/I,EACA6I,EACAG,IAAe,WAAf,EAAmB/H,IQHvBgI,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OACWvB,SAAS4B,eAAe,SDkHjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.432297e7.chunk.js","sourcesContent":["export const RECEIVE_JSON = 'RECEIVE_JSON';\nexport const REQUEST_JSON = 'REQUEST_JSON';\nexport const INCREMENT_INDEX = 'INCREMENT_INDEX';\nexport const DECREMENT_INDEX = 'DECREMENT_INDEX';\nexport const UPDATE_FIELD = 'UPDATE_FIELD';\nexport const UPDATE_FILENAME = 'UPDATE_FILENAME';\n\nexport function receiveJSON(json) {\n  return {\n    type: RECEIVE_JSON,\n    payload: json,\n  };\n}\n\nexport function updateFileName(name) {\n  return {\n    type: UPDATE_FILENAME,\n    payload: name,\n  };\n}\n\nexport function requestJSON(json) {\n  return {\n    type: REQUEST_JSON,\n  };\n}\n\nexport function incrementIndex() {\n  return {\n    type: INCREMENT_INDEX,\n  };\n}\n\nexport function decrementIndex() {\n  return {\n    type: DECREMENT_INDEX,\n  };\n}\n\nexport function updateField(field, value) {\n  return {\n    type: UPDATE_FIELD,\n    field: field,\n    value: value,\n  };\n}\n","import { combineReducers } from 'redux';\n\nimport {\n  RECEIVE_JSON,\n  REQUEST_JSON,\n  INCREMENT_INDEX,\n  DECREMENT_INDEX,\n  UPDATE_FIELD,\n  UPDATE_FILENAME,\n} from '../actions';\n\nconst editJSON = (\n  state={\n    isLoading: false,\n    name: 'temp.json',\n    data: [\n      {\n        a: 'Hello',\n        b: 'World',\n        c: '!!!!',\n      },\n      {\n        a: 'foo',\n        b: 'bar',\n        c: 'foobar',\n      },\n    ],\n    index: 0,\n  },\n  action\n) => {\n  switch (action.type) {\n    case REQUEST_JSON:\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    case RECEIVE_JSON:\n      return Object.assign({}, state, {\n        data: action.payload,\n        isLoading: false,\n        index: 0,\n      });\n    case INCREMENT_INDEX:\n      return Object.assign({}, state, {\n        index: state.index + 1,\n      });\n    case DECREMENT_INDEX:\n      return Object.assign({}, state, {\n        index: state.index - 1,\n      });\n    case UPDATE_FILENAME:\n      return Object.assign({}, state, {\n        name: action.payload,\n      });\n    case UPDATE_FIELD:\n      return Object.assign({}, state, {\n        data: state.data.map((item, index) => {\n          if (index === state.index) {\n            item[action.field] = action.value\n          }\n          return item;\n        })\n      });\n    default:\n      return state;\n  }\n}\n\n\nconst rootReducer = combineReducers({\n  editJSON,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport rootReducer from '../reducers';\n\nconst middlewares = [thunkMiddleware];\nif (process.env.NODE_ENV === 'development') {\n  const { logger } = require('redux-logger');\n  middlewares.push(logger);\n}\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(...middlewares)\n  );\n}\n","import { useState, useEffect } from 'react';\n\nconst useKeyPress = (targetKey) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  function upHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  });\n\n  return keyPressed;\n}\n\nexport default useKeyPress;\n","import React, { useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport { incrementIndex, decrementIndex } from '../redux/actions';\n\nimport useKeyPress from '../hooks/useKeyPress';\n\n\nconst NavigationButtons = () => {\n  const dispatch = useDispatch();\n  const dataLength = useSelector(state => state.editJSON.data.length);\n  const dataIndex = useSelector(state => state.editJSON.index);\n  const [canNext, setCanNext] = useState(false);\n  const [canPrev, setCanPrev] = useState(false);\n  const leftPress = useKeyPress('ArrowLeft');\n  const rightPress = useKeyPress('ArrowRight');\n\n\n  useEffect(() => {\n    setCanNext(dataIndex + 1 <= dataLength - 1);\n    setCanPrev(dataIndex - 1 >= 0);\n  }, [dataIndex, dataLength]);\n\n  useEffect(() => {\n    if (canNext && rightPress) {\n      handleNext();\n    } else if (canPrev && leftPress) {\n      handlePrev();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [leftPress, rightPress, canNext, canPrev]);\n\n  function handlePrev() {\n    if (canPrev) {\n      dispatch(decrementIndex());\n    }\n  }\n\n  function handleNext() {\n    if (canNext) {\n      dispatch(incrementIndex());\n    }\n  }\n\n  return (\n    <ButtonGroup>\n      <Button \n        disabled={dataIndex <= 0}\n        onClick={() => dispatch(decrementIndex())}\n      >\n        <ArrowBackIcon />\n      </Button>\n      <Button\n        disabled={dataIndex >= dataLength - 1}\n        onClick={() => dispatch(incrementIndex())}\n      >\n        <ArrowForwardIcon />\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default NavigationButtons;\n","import React, { useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { updateField } from '../redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: '100%',\n    width: 600,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 20,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: '100%',\n  },\n  subTextField: {\n    margin: theme.spacing(1),\n    marginLeft: 'auto',\n    width: '90%',\n  },\n  iconButton: {\n    padding: 5,\n  },\n  divider: {\n    height: 20,\n    margin: 4,\n  },\n  inputRoot: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    // width: 500,\n    width: '100%',\n  },\n}));\n\nconst EditCard = ({ data }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const fileName = useSelector(state => state.editJSON.name);\n  const [disabled, setDisabled] = useState({});\n\n  function handleChange(key, value) {\n    dispatch(updateField(key, value));\n  }\n\n  function handleRedact(key) {\n    dispatch(updateField(key, \"XXXXX\"));\n  }\n\n  function handleEdit(key) {\n    let temp = Object.assign({}, disabled, {\n      [key]: !disabled[key]\n    });\n    setDisabled(temp);\n  }\n\n\n  useEffect(() => {\n    const tempDisabled = {};\n    Object.keys(data).forEach((key) => {\n      tempDisabled[key] = true;\n    });\n    setDisabled(tempDisabled);\n  }, [data])\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {fileName}\n        </Typography>\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          {\n            Object.keys(data).map((key, index) => (\n              <div className={classes.inputRoot} key={index}>\n                <TextField\n                  label={key}\n                  value={data[key]}\n                  onChange={(e) => handleChange(key, e.target.value)}\n                  multiline\n                  className={classes.textField}\n                  inputProps={{ 'aria-label': key }}\n                  variant=\"outlined\"\n                  disabled={disabled[key]}\n                />\n                <IconButton\n                  className={classes.iconButton}\n                  aria-label='redact all'\n                  onClick={() => handleRedact(key)}\n                >\n                  <HighlightOffIcon />\n                </IconButton>\n                <Divider\n                  className={classes.divider}\n                  orientation=\"vertical\"\n                />\n                <IconButton\n                  className={classes.iconButton}\n                  aria-label=\"directions\"\n                  onClick={() => handleEdit(key)}\n                >\n                  <EditIcon />\n                </IconButton>\n              </div>\n                \n            ))\n          }\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default EditCard;","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\n\nimport { receiveJSON, updateFileName } from '../redux/actions';\n\nimport flatten from 'flat';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n  hidden: {\n    display: 'none',\n  },\n}));\n\nconst FileUpload = () => {\n  const reader = new FileReader();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  function handleFileUpload(e) {\n    reader.onload = onReaderLoad;\n    const oldName = e.target.files[0].name;\n    const newName = oldName.match(/^.*(?=(\\.json))/)[0] + '_REDACTED.json';\n    dispatch(updateFileName(newName));\n    reader.readAsText(e.target.files[0]);\n  }\n\n  function onReaderLoad(e) {\n    const obj = JSON.parse(e.target.result);\n    const newObj = obj.map(item => {\n      return flatten(item);\n    });\n    dispatch(receiveJSON(newObj));\n  }\n\n  function handleClick() {\n    document.querySelector('#input').click();\n  }\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        onChange={(e) => handleFileUpload(e)}\n        id='input'\n        className={classes.hidden}\n      />\n      <Button\n        onClick={() => handleClick()}\n        variant=\"outlined\"\n      >\n        Upload\n      </Button>\n    </div>\n  );\n}\n\nexport default FileUpload;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport flatten from 'flat';\n\nimport Button from '@material-ui/core/Button';\n\nconst FileDownload = () => {\n  const dataObj = useSelector(state => state.editJSON.data);\n  const filename = useSelector(state => state.editJSON.name);\n  const [dataStr, setDataStr] = useState('');\n\n  // const dataStr = (\n  //   \"data:text/json;charset=utf-8,\" + \n  //   encodeURIComponent(JSON.stringify(dataObj))\n  // );\n\n  useEffect(() => {\n    const tempObj = dataObj.map((item) => {\n      return flatten.unflatten(item);\n    });\n    setDataStr(\n      'data:text/json;charset=utf-8,' + \n      encodeURIComponent(JSON.stringify(tempObj))\n    );\n\n  }, [dataObj]);\n\n  return (\n    <Button variant=\"outlined\" href={dataStr} download={filename}>\n      Download\n    </Button>\n  );\n}\n\nexport default FileDownload;","import React, { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport NavigationButtons from './NavigationButtons';\nimport EditCard from './EditCard';\nimport FileUpload from './FileUpload';\nimport FileDownload from './FileDownload';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../assets/App.css';\n\n\nconst useStyles = makeStyles(theme => ({\n  fileButtons: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const data = useSelector(state => state.editJSON.data);\n  const dataIndex = useSelector(state => state.editJSON.index);\n  const [dataItem, setDataItem] = useState();\n\n  useEffect(() => {\n    setDataItem(data[dataIndex]);\n  }, [dataIndex, data]);\n\n  return (\n    <div className=\"App\">\n      <NavigationButtons />\n      {dataItem && (<EditCard data={dataItem} />)}\n      { data && (\n        <p>Index: {dataIndex}</p>\n      )}\n      <div className={classes.fileButtons}>\n        <FileUpload />\n        <FileDownload />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './redux/store';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}