{"version":3,"sources":["redux/actions/index.js","redux/reducers/index.js","redux/store/index.js","hooks/useKeyPress.js","components/NavigationButtons.js","constants.js","components/AddExplanationButton.js","components/EditCard.js","components/FileUpload.js","components/FileDownload.js","components/ExplanationsDownload.js","components/ProgressBar.js","components/InfoButton.js","components/App.js","serviceWorker.js","index.js"],"names":["RECEIVE_JSON","REQUEST_JSON","INCREMENT_INDEX","DECREMENT_INDEX","UPDATE_FIELD","UPDATE_FILENAME","ADD_EXPLANATION","SET_PROCEED","incrementIndex","type","decrementIndex","updateField","field","value","setProceed","proceed","rootReducer","combineReducers","editJSON","state","isLoading","canProceed","name","data","a","b","c","index","explanations","action","Object","assign","payload","map","item","explanation","middlewares","thunkMiddleware","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","window","addEventListener","removeEventListener","NavigationButtons","dispatch","useDispatch","dataLength","useSelector","length","dataIndex","canNext","setCanNext","canPrev","setCanPrev","leftPress","rightPress","ButtonGroup","Button","disabled","onClick","redactExplanations","AddExplanationButton","hasExplanation","needsExplanation","anchorEl","setAnchorEl","handleMenuClose","addExplanation","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Tooltip","title","IconButton","e","currentTarget","color","undefined","useStyles","makeStyles","theme","card","maxWidth","width","marginLeft","marginRight","marginTop","container","display","flexWrap","textField","margin","spacing","subTextField","iconButton","padding","divider","height","inputRoot","alignItems","EditCard","classes","fileName","currentExplanations","setDisabled","redacted","setRedacted","checkExplanation","find","tempDisabled","tempRedacted","keys","forEach","rKeys","filter","console","log","el","Card","className","CardContent","Typography","gutterBottom","noValidate","autoComplete","TextField","label","onChange","handleChange","target","multiline","inputProps","variant","error","aria-label","event","temp","repeat","handleRedact","Divider","orientation","handleEdit","hidden","FileUpload","reader","FileReader","handleFileUpload","onload","onReaderLoad","newName","files","match","readAsText","newObj","JSON","parse","result","flatten","document","querySelector","click","FileDownload","dataObj","filename","dataStr","setDataStr","tempObj","unflatten","encodeURIComponent","stringify","href","download","ExplanationsDownload","csvContent","rowArray","row","join","encodeURI","root","marginBottom","text","fontSize","ProgressBar","LinearProgress","textAlign","InfoButton","setOpen","handleClose","button","Dialog","DialogTitle","DialogContent","dividers","DialogActions","autoFocus","fileButtons","justifyContent","App","dataItem","setDataItem","location","hostname","preloadedState","store","createStore","applyMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b266fe61.chunk.js","sourcesContent":["export const RECEIVE_JSON = 'RECEIVE_JSON';\nexport const REQUEST_JSON = 'REQUEST_JSON';\nexport const INCREMENT_INDEX = 'INCREMENT_INDEX';\nexport const DECREMENT_INDEX = 'DECREMENT_INDEX';\nexport const UPDATE_FIELD = 'UPDATE_FIELD';\nexport const UPDATE_FILENAME = 'UPDATE_FILENAME';\nexport const ADD_EXPLANATION = 'ADD_EXPLANATION';\nexport const TOGGLE_PROCEED = 'TOGGLE_PROCEED';\nexport const SET_PROCEED = 'SET_PROCEED';\n\nexport function receiveJSON(json) {\n  return {\n    type: RECEIVE_JSON,\n    payload: json,\n  };\n}\n\nexport function updateFileName(name) {\n  return {\n    type: UPDATE_FILENAME,\n    payload: name,\n  };\n}\n\nexport function requestJSON(json) {\n  return {\n    type: REQUEST_JSON,\n  };\n}\n\nexport function incrementIndex() {\n  return {\n    type: INCREMENT_INDEX,\n  };\n}\n\nexport function decrementIndex() {\n  return {\n    type: DECREMENT_INDEX,\n  };\n}\n\nexport function updateField(field, value) {\n  return {\n    type: UPDATE_FIELD,\n    field: field,\n    value: value,\n  };\n}\n\nexport function addExplanation(index, field, explanation) {\n  return {\n    type: ADD_EXPLANATION,\n    index: index,\n    field: field,\n    explanation: explanation,\n  };\n}\n\nexport function toggleProceed() {\n  return {\n    type: TOGGLE_PROCEED,\n  };\n}\n\nexport function setProceed(proceed) {\n  return {\n    type: SET_PROCEED,\n    proceed: proceed,\n  };\n}\n","import { combineReducers } from 'redux';\n\nimport {\n  RECEIVE_JSON,\n  REQUEST_JSON,\n  INCREMENT_INDEX,\n  DECREMENT_INDEX,\n  UPDATE_FIELD,\n  UPDATE_FILENAME,\n  ADD_EXPLANATION,\n  SET_PROCEED,\n} from '../actions';\n\nconst editJSON = (\n  state={\n    isLoading: false,\n    canProceed: true,\n    name: 'temp_REDACTED.json',\n    data: [\n      {\n        a: 'Hello',\n        b: 'World',\n        c: '!!!!',\n      },\n      {\n        a: 'foo',\n        b: 'bar',\n        c: 'foobar',\n      },\n    ],\n    index: 0,\n    explanations: [['jsonIndex', 'fieldName', 'Explanation']],\n  },\n  action\n) => {\n  switch (action.type) {\n    case REQUEST_JSON:\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    case RECEIVE_JSON:\n      return Object.assign({}, state, {\n        data: action.payload,\n        isLoading: false,\n        index: 0,\n      });\n    case INCREMENT_INDEX:\n      return Object.assign({}, state, {\n        index: state.index + 1,\n      });\n    case DECREMENT_INDEX:\n      return Object.assign({}, state, {\n        index: state.index - 1,\n      });\n    case SET_PROCEED:\n      return Object.assign({}, state, {\n        canProceed: action.proceed,\n      });\n    case UPDATE_FILENAME:\n      return Object.assign({}, state, {\n        name: action.payload,\n      });\n    case UPDATE_FIELD:\n      return Object.assign({}, state, {\n        data: state.data.map((item, index) => {\n          if (index === state.index) {\n            item[action.field] = action.value\n          }\n          return item;\n        })\n      });\n    case ADD_EXPLANATION:\n      return Object.assign({}, state, {\n        explanations: [\n          ...state.explanations,\n          [action.index, action.field, action.explanation]\n        ],\n      });\n    default:\n      return state;\n  }\n}\n\n\nconst rootReducer = combineReducers({\n  editJSON,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport rootReducer from '../reducers';\n\nconst middlewares = [thunkMiddleware];\nif (process.env.NODE_ENV === 'development') {\n  const { logger } = require('redux-logger');\n  middlewares.push(logger);\n}\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(...middlewares)\n  );\n}\n","import { useState, useEffect } from 'react';\n\nconst useKeyPress = (targetKey) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  function upHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  });\n\n  return keyPressed;\n}\n\nexport default useKeyPress;\n","import React, { useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport { incrementIndex, decrementIndex } from '../redux/actions';\n\nimport useKeyPress from '../hooks/useKeyPress';\n\n\nconst NavigationButtons = () => {\n  const dispatch = useDispatch();\n  const dataLength = useSelector(state => state.editJSON.data.length);\n  const dataIndex = useSelector(state => state.editJSON.index);\n  const canProceed = useSelector(state => state.editJSON.canProceed);\n  const [canNext, setCanNext] = useState(false);\n  const [canPrev, setCanPrev] = useState(false);\n  const leftPress = useKeyPress('ArrowLeft');\n  const rightPress = useKeyPress('ArrowRight');\n\n\n  useEffect(() => {\n    setCanNext(dataIndex + 1 <= dataLength - 1);\n    setCanPrev(dataIndex - 1 >= 0);\n  }, [dataIndex, dataLength]);\n\n  useEffect(() => {\n    if (canNext && rightPress) {\n      handleNext();\n    } else if (canPrev && leftPress) {\n      handlePrev();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [leftPress, rightPress, canNext, canPrev]);\n\n  function handlePrev() {\n    if (canPrev && canProceed) {\n      dispatch(decrementIndex());\n    }\n  }\n\n  function handleNext() {\n    if (canNext && canProceed) {\n      dispatch(incrementIndex());\n    }\n  }\n\n\n  return (\n    <ButtonGroup>\n      <Button \n        disabled={!canProceed || dataIndex <= 0}\n        onClick={() => dispatch(decrementIndex())}\n      >\n        <ArrowBackIcon />\n      </Button>\n      <Button\n        disabled={!canProceed || dataIndex >= dataLength - 1}\n        onClick={() => dispatch(incrementIndex())}\n      >\n        <ArrowForwardIcon />\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default NavigationButtons;\n","export const redactExplanations = [\n  'Personal Contact Information',\n  'Right to privacy',\n  'Preliminary drafts, notes, or intra-agency memoranda',\n  'Personnel Records',\n  'Attorney Client Communications',\n  'Litigation records to which the BID is a party',\n  'Deliberative process',\n];\n","import React, { useState } from \"react\";\n\nimport { useDispatch } from 'react-redux';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/Iconbutton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nimport { redactExplanations } from \"../constants\";\nimport { addExplanation } from '../redux/actions';\n\nconst AddExplanationButton = ({\n  field,\n  hasExplanation,\n  needsExplanation,\n  dataIndex,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const dispatch = useDispatch();\n\n  function handleMenuClose(explanation) {\n    setAnchorEl(null);\n    dispatch(addExplanation(dataIndex, field, explanation));\n  }\n\n  function handleClickToOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  return (\n    <div>\n      <Menu\n        id={`explanation-${field}`}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n      >\n        {redactExplanations.map((explanation, index) => (\n          <MenuItem\n            key={index}\n            onClick={() => handleMenuClose(explanation)}\n          >\n            {explanation}\n          </MenuItem>\n        ))}\n      </Menu>\n      <Tooltip title=\"Add redact explanation\">\n        <IconButton\n          onClick={(e) => handleClickToOpen(e)}\n          color={(\n            needsExplanation\n            ? 'secondary'\n            : hasExplanation \n              ? 'primary'\n              : undefined\n          )}\n        >\n          <CommentIcon />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default AddExplanationButton;","import React, { useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { updateField, setProceed } from '../redux/actions';\nimport AddExplanationButton from './AddExplanationButton';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: '100%',\n    width: 600,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 20,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: '100%',\n  },\n  subTextField: {\n    margin: theme.spacing(1),\n    marginLeft: 'auto',\n    width: '90%',\n  },\n  iconButton: {\n    padding: 5,\n  },\n  divider: {\n    height: 20,\n    margin: 4,\n  },\n  inputRoot: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    // width: 500,\n    width: '100%',\n  },\n}));\n\nconst EditCard = ({ data }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const fileName = useSelector(state => state.editJSON.name);\n  const dataIndex = useSelector(state => state.editJSON.index);\n  const currentExplanations = useSelector(state => state.editJSON.explanations);\n  const [disabled, setDisabled] = useState({});\n  const [redacted, setRedacted] = useState({});\n\n  function handleChange(key, value) {\n    dispatch(updateField(key, value));\n  }\n\n  function handleRedact(event, key) {\n    let temp = Object.assign({}, redacted, {\n      [key]: !redacted[key]\n    });\n    setRedacted(temp);\n    dispatch(updateField(key, \"X\".repeat(data[key].length)));\n  }\n\n  function handleEdit(event, key) {\n    let temp = Object.assign({}, disabled, {\n      [key]: !disabled[key]\n    });\n    setDisabled(temp);\n  }\n\n  function checkExplanation(key, index) {\n    const explanations = currentExplanations || [];\n    const found = explanations.find(e => (\n      e[0] === index && e[1] === key\n    ));\n    return found ? true : false;\n  }\n  \n  useEffect(() => {\n    const tempDisabled = {};\n    const tempRedacted = {};\n    Object.keys(data).forEach((key) => {\n      tempDisabled[key] = true;\n      tempRedacted[key] = false;\n    });\n    setDisabled(tempDisabled);\n    setRedacted(tempRedacted);\n  }, [data])\n\n  useEffect(() => {\n    const rKeys = Object.keys(redacted).filter((e) => (\n      redacted[e] === true\n    ));\n\n    console.log(rKeys);\n\n    const needsExplanation = rKeys.find((el) => (\n      !checkExplanation(el, dataIndex)\n    ));\n\n    if (needsExplanation) {\n      dispatch(setProceed(false));\n    } else {\n      dispatch(setProceed(true));\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [redacted, dispatch, checkExplanation])\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {fileName}\n        </Typography>\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          {\n            Object.keys(data).map((key, index) => (\n              <div className={classes.inputRoot} key={index}>\n                <TextField\n                  label={key}\n                  value={data[key]}\n                  onChange={(e) => handleChange(key, e.target.value)}\n                  multiline\n                  className={classes.textField}\n                  inputProps={{ 'aria-label': key }}\n                  variant=\"outlined\"\n                  disabled={disabled[key]}\n                  error={redacted[key] && !checkExplanation(key, dataIndex)}\n                />\n                <Tooltip title=\"Redact entire field\">\n                  <IconButton\n                    className={classes.iconButton}\n                    aria-label='redact all'\n                    onClick={(e) => handleRedact(e, key)}\n                  >\n                    <HighlightOffIcon />\n                  </IconButton>\n                </Tooltip>\n                <Divider\n                  className={classes.divider}\n                  orientation=\"vertical\"\n                />\n                <Tooltip title=\"Edit\">\n                  <IconButton\n                    className={classes.iconButton}\n                    aria-label=\"directions\"\n                    onClick={(e) => handleEdit(e, key)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n                <AddExplanationButton\n                  field={key}\n                  dataIndex={dataIndex}\n                  hasExplanation={checkExplanation(key, dataIndex)}\n                  needsExplanation={(\n                    redacted[key] && \n                    !checkExplanation(key, dataIndex)\n                  )}\n                />\n              </div>\n                \n            ))\n          }\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default EditCard;","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\n\nimport { receiveJSON, updateFileName } from '../redux/actions';\n\nimport flatten from 'flat';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n  hidden: {\n    display: 'none',\n  },\n}));\n\nconst FileUpload = () => {\n  const reader = new FileReader();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  function handleFileUpload(e) {\n    reader.onload = onReaderLoad;\n    const oldName = e.target.files[0].name;\n    const newName = oldName.match(/^.*(?=(\\.json))/)[0] + '_REDACTED.json';\n    dispatch(updateFileName(newName));\n    reader.readAsText(e.target.files[0]);\n  }\n\n  function onReaderLoad(e) {\n    const obj = JSON.parse(e.target.result);\n    const newObj = obj.map(item => {\n      return flatten(item);\n    });\n    dispatch(receiveJSON(newObj));\n  }\n\n  function handleClick() {\n    document.querySelector('#input').click();\n  }\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        onChange={(e) => handleFileUpload(e)}\n        id='input'\n        className={classes.hidden}\n      />\n      <Button\n        onClick={() => handleClick()}\n        variant=\"outlined\"\n        color='primary'\n      >\n        Upload JSON\n      </Button>\n    </div>\n  );\n}\n\nexport default FileUpload;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport flatten from 'flat';\n\nimport Button from '@material-ui/core/Button';\n\nconst FileDownload = () => {\n  const dataObj = useSelector(state => state.editJSON.data);\n  const filename = useSelector(state => state.editJSON.name);\n  const canProceed = useSelector(state => state.editJSON.canProceed);\n  const [dataStr, setDataStr] = useState('');\n\n  useEffect(() => {\n    const tempObj = dataObj.map((item) => {\n      return flatten.unflatten(item);\n    });\n    setDataStr(\n      'data:text/json;charset=utf-8,' + \n      encodeURIComponent(JSON.stringify(tempObj))\n    );\n\n  }, [dataObj]);\n\n  return (\n    <Button\n      variant=\"outlined\"\n      href={dataStr}\n      download={filename}\n      color='primary'\n      disabled={!canProceed}\n    >\n      Download JSON\n    </Button>\n  );\n}\n\nexport default FileDownload;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\n\nconst ExplanationsDownload = () => {\n  const dataObj = useSelector(state => state.editJSON.explanations);\n  const canProceed = useSelector(state => state.editJSON.canProceed);\n  const filename = 'Explanations.csv';\n  const [dataStr, setDataStr] = useState('');\n\n  useEffect(() => {\n    let csvContent = 'data:text/csv;charset=utf-8,';\n    dataObj.forEach((rowArray) => {\n      let row = rowArray.join(',');\n      csvContent += row + '\\n';\n    });\n\n    setDataStr(encodeURI(csvContent));\n\n  }, [dataObj]);\n\n  return (\n    <Button\n      color='primary'\n      variant=\"outlined\"\n      href={dataStr}\n      download={filename}\n      disabled={!canProceed}\n    >\n      Download Reasons\n    </Button>\n  );\n}\n\nexport default ExplanationsDownload;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: '100%',\n    width: 400,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: '20px',\n    marginBottom: '20px',\n  },\n  text: {\n    fontSize: '12px',\n    color: 'grey',\n  }\n}));\n\nconst ProgressBar = () => {\n  const classes = useStyles();\n  const dataIndex = useSelector(state => state.editJSON.index);\n  const dataLength = useSelector(state => state.editJSON.data.length);\n\n  return (\n    <>\n    <LinearProgress\n      variant=\"determinate\"\n      value={(dataIndex + 1) / dataLength * 100}\n      className={classes.root}\n    />\n    <span className={classes.text}>({dataIndex + 1} of {dataLength})</span>\n    </>\n  );\n}\n\nexport default ProgressBar;","import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'end',\n    width: 700,\n    maxWidth: '100%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n}));\n\nconst InfoButton = () => {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n        className={classes.button}\n      >\n        <InfoIcon />\n      </IconButton>\n      <Dialog onClose={handleClose} open={open}>\n        <DialogTitle onClose={handleClose}>\n          Redact your JSON\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Click the 'UPLOAD JSON' button to upload your JSON file to the web app\n          </Typography>\n          <Typography gutterBottom>\n            Once the form loads to your json structure, click the edit or \n            redact-all buttons to edit your new JSON.\n          </Typography>\n          <Typography gutterBottom>\n            The 'add explanation' button allows for the user to choose an explanation for\n            the redaction that is compiled to a csv file for later download.\n          </Typography>\n          <Typography gutterBottom>\n            Once all edits are done, a redacted version of your JSON is available\n            for download by click the 'DOWNLOAD JSON' button.\n          </Typography>\n          <Typography gutterBottom>\n            All edits are done in the browser and never sent to a server.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              Dismiss\n            </Button>\n          </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default InfoButton;\n","import React, { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport NavigationButtons from './NavigationButtons';\nimport EditCard from './EditCard';\nimport FileUpload from './FileUpload';\nimport FileDownload from './FileDownload';\nimport ExplanationsDownload from  './ExplanationsDownload';\nimport ProgressBar from './ProgressBar';\nimport InfoButton from './InfoButton';\n\nimport '../assets/App.css';\n\n\nconst useStyles = makeStyles(theme => ({\n  fileButtons: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: 20,\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const data = useSelector(state => state.editJSON.data);\n  const dataIndex = useSelector(state => state.editJSON.index);\n  const [dataItem, setDataItem] = useState();\n\n  useEffect(() => {\n    setDataItem(data[dataIndex]);\n  }, [dataIndex, data]);\n\n  return (\n    <div className=\"App\">\n      <InfoButton />\n      <NavigationButtons />\n      <ProgressBar />\n      {dataItem && (<EditCard data={dataItem} />)}\n      <div className={classes.fileButtons}>\n        <FileUpload />\n        <FileDownload />\n        <ExplanationsDownload />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './redux/store';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}